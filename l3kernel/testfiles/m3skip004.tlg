This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
Author: LaTeX Project
============================================================
TEST 1: Dimension expressions with potentially no units
============================================================
1
1.00374
7
============================================================
============================================================
TEST 2: Setting a dimension if smaller/bigger
============================================================
0.0pt
1.0pt
0.0pt
-1.0pt
============================================================
============================================================
TEST 3: Strip big point unit
============================================================
1.1192
1.1234
6.97386
============================================================
============================================================
TEST 4: Convert to pt
============================================================
1.1234
1.12761
7
============================================================
============================================================
TEST 5: Convert to unit
============================================================
0.99629
1.00375
1.75
16384.25
123456789
1073741823
98765.01234
============================================================
============================================================
TEST 6: Bad conversions
============================================================
! Missing ) inserted for expression.
<to be read again> 
                   p
l. ...  }
I was expecting to see `+', `-', `*', `/', or `)'. Didn't.
! Dimension too large.
<to be read again> 
                   \__dim_eval_end: 
l. ...  }
I can't work with sizes bigger than about 19 feet.
Continue and I'll use the largest value I can.
! Missing = inserted for \ifnum.
<to be read again> 
                   p
l. ...  }
I was expecting to see `<', `=', or `>'. Didn't.
! Missing number, treated as zero.
<to be read again> 
                   p
l. ...  }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)
! Missing = inserted for \ifnum.
<to be read again> 
                   p
l. ...  }
I was expecting to see `<', `=', or `>'. Didn't.
! Missing number, treated as zero.
<to be read again> 
                   p
l. ...  }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)
! Missing ) inserted for expression.
<to be read again> 
                   p
l. ...  }
I was expecting to see `+', `-', `*', `/', or `)'. Didn't.
! Dimension too large.
<to be read again> 
                   -
l. ...  }
I can't work with sizes bigger than about 19 feet.
Continue and I'll use the largest value I can.
! Dimension too large.
<to be read again> 
                   -
l. ...  }
I can't work with sizes bigger than about 19 feet.
Continue and I'll use the largest value I can.
! Dimension too large.
<to be read again> 
                   \__dim_eval_end: 
l. ...  }
I can't work with sizes bigger than about 19 feet.
Continue and I'll use the largest value I can.
! Missing = inserted for \ifdim.
<to be read again> 
                   )
l. ...  }
I was expecting to see `<', `=', or `>'. Didn't.
! Missing number, treated as zero.
<to be read again> 
                   )
l. ...  }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)
! Illegal unit of measure (pt inserted).
<to be read again> 
                   )
l. ...  }
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Zero unit in conversion.
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
============================================================
